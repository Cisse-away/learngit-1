#include<stdio.h>
#include <stdlib.h>
#include <conio.h>
#include <string.h>
#include <time.h>
#include <windows.h>
#define L  30
#define C  15

struct Snake//蛇的节点
{
    int x, y;
    int now;

} Snake[C*L];

void Game();
void AI_Move();
void AI_show();
void Welcome();
void SnakeMap();
void AI_Button();
void Create_Food();
void Pos(int ,int );
void Check_Border();
void Create_Snake();
void Check_Head(int , int );

//全局变量
int M[L][C]= {0}; //初始化地图上多有点为0
int key;
int T = 150;//刷新频率
int sum = 1, over = 0;
int hx,hy,fx,fy;
int first = 1;

int main()
{

    Game();
    return 0;
}

void Game()//游戏进行
{
    int i;
    Welcome();
    system("cls");
    SnakeMap();
    Create_Food();
    Create_Snake();
    i = getch();
    AI_show();
}

void Pos(int x,int y)//设置光标位置
{
    COORD pos;
    HANDLE hOutput;
    pos.X = x;
    pos.Y = y;
    hOutput = GetStdHandle(STD_OUTPUT_HANDLE);
    SetConsoleCursorPosition(hOutput,pos);
}

void Welcome()//欢迎界面
{
    system("mode con cols=100 lines=50");
    system("color B");
    system("title 贪吃蛇");
    Pos(L/2,C/3);
    printf("欢迎来到贪吃蛇游戏界面~~");
    Pos(1,C - 5);
    system("pause");
}

void SnakeMap()//初始化地图
{
    system("color B");//设置颜色
    int i,j;
    for(i = 0; i < L; i++)
        for(j = 0; j < C; j++)
            if(i==0||j==0||i==L-1||j==C-1)
            {
                Pos(i,j);
                printf("*");
                M[i][j] = 3;
            }
    Pos(L + 5,5);
    printf("游戏规则如下:");
    Pos(L + 5,7);
    printf("按任意键开始自动游戏.");
    Pos(L + 5,9);
    printf("q 为加速，p 为减速.\n");
    Pos(L + 5,11);
    printf("ESC :退出游戏.空格:暂停游戏.");
}

void Create_Food()//随机产生食物
{
    int n =0;
    int i;
    do
    {
        n++;
        srand((unsigned)time(NULL)+n);
        fx = rand()%(L-2)+1;
        fy = rand()%(C-2)+1;
    }
    while(M[fx][fy]!=0);
    Pos(fx,fy);
    printf("\1");//食物
    M[fx][fy]=1;
}

void Create_Snake()//创造蛇
{
    int i,j,n=0;
    int S_food=1;
    int S_head=2;
    srand((unsigned)time(NULL)+n);

    hx = rand()%(L-2)+1;
    hy = rand()%(C-2)+1;

    Pos(hx,hy);//蛇头
    printf("\2");
    M[hx][hy]=S_head;
    Snake[0].x = hx;
    Snake[0].y = hy;
    Snake[0].now = -1;
}

void Check_Head(int x, int y)//检查蛇头
{
    int i;
    if(M[ Snake[0].x ][ Snake[0].y ] == 0)
    {
        Pos(Snake[0].x,Snake[0].y);
        printf("\2");
        M[ Snake[0].x ][ Snake[0].y ] = 2;
    }
    else if(M[ Snake[0].x ][ Snake[0].y ] == 1)//如果吃到食物
    {

        M[ Snake[0].x ][ Snake[0].y ] = 2;
        Pos(Snake[0].x,Snake[0].y);
        printf("\2");
        Snake[sum].x = x;
        Snake[sum].y = y;
        Snake[sum].now = Snake[0].now;
        M[ Snake[sum].x ][ Snake[sum].y ] = 4;
        Pos(Snake[sum].x,Snake[sum].y);
        printf("#");
        sum++;
        Create_Food();
    }
    for(i = 1; i < sum; i++)//如果吃到自己
    {
        if(Snake[0].x == Snake[i].x&&Snake[0].y == Snake[i].y)
            over=2;
    }
}

void Check_Border()//检查是否撞墙
{
    if(M[Snake[0].x][Snake[0].y]==3)
    {
        system("cls");
        Pos(L/2,C/3);
        printf("啊，不小心撞墙了，游戏结束");
        Pos(L/2,C/3+1);
        printf("                >_<\n");
        Pos(L/2,C/3+3);
        printf("按任意键结束...");
        getchar();
        exit(0);
    }
}

//自动运动时舍得
void AI_Button()
{
    if(kbhit() != 0)
    {
        while(kbhit() != 0)
        {
            key = getch();
        }
        if(key <= 0)
            key =  getch();
        switch(key)
        {
        case 27:
            system("cls");
            Pos(L/2,C/3);
            printf("谢谢使用！！！");
            Pos(L/2,C/3 + 1);
            printf("按任意键结束...");
            getch();
            exit(0);
            break;
        case 32:
            Pos(1,C + 3);
            system("pause");
            break;
        case 112:
            if(T <= 500)
                T = T + 50;
            break;
        case 113:
            if(T >= 10)
                T = T - 10;
            break;

        }
    }
}

void AI_Move()
{
    int i, x, y;
    int t = sum;
    int  dx[4] = {0, 0, -1, 1};
    int  dy[4] = {-1, 1, 0, 0};
    x = Snake[0].x;
    y = Snake[0].y;
    if(first == 1)//刚开始
    {
        if(fx>x)
            Snake[0].now = 3;
        else
            Snake[0].now = 2;
        first = 0;
    }
    else
    {
        if(x<fx && y<fy)//you下
        {
            if(M[x+1][y]!=4&&M[x+1][y]!=3)
            {
                Snake[0].now = 3;//you
            }
            else if(M[x][y+1]!=4&&M[x][y+1]!=3)
            {
                Snake[0].now = 1;//下
            }
            else if(M[x-1][y]!=4&&M[x-1][y]!=3)
            {
                Snake[0].now = 2;//下
            }
            else
            {
                Snake[0].now = 0;//下
            }
        }
        if(x<fx && y>fy)
        {
            if(M[x][y-1]!=4&&M[x][y-1]!=3)
            {
                Snake[0].now = 0;
            }
            else if(M[x+1][y]!=4&&M[x+1][y]!=3)
            {
                Snake[0].now = 3;//you
            }
            else if(M[x][y+1]!=4&&M[x][y+1]!=3)
            {
                Snake[0].now = 1;//下
            }
            else
            {
                Snake[0].now = 2;//下
            }
        }
        if(x>fx && y>fy)
        {
            if(M[x][y-1]!=4&&M[x][y-1]!=3)
            {
                Snake[0].now = 0;
            }
            else if(M[x-1][y]!=4&&M[x-1][y]!=3)
            {
                Snake[0].now = 2;
            }
            else if(M[x+1][y]!=4&&M[x+1][y]!=3)
            {
                Snake[0].now = 3;//you
            }
            else
            {
                Snake[0].now = 1;//下
            }
        }
        if(x>fx && y<fy)
        {
            if(M[x-1][y]!=4&&M[x-1][y]!=3)
            {
                Snake[0].now = 2;
            }
            else if(M[x][y+1]!=4&&M[x][y+1]!=3)
            {
                Snake[0].now = 1;
            }
            else if(M[x+1][y]!=4&&M[x+1][y]!=3)
            {
                Snake[0].now = 3;//you
            }
            else
            {
                Snake[0].now = 0;//下
            }
        }
        if(x == fx)
        {
            if(y<fy)
            {
                if(M[x][y+1]!=4&&M[x][y+1]!=3)
                    Snake[0].now = 1;
                else if(M[x+1][y]!=4&M[x+1][y]!=3)
                {
                    Snake[0].now = 3;
                }

                else if(M[x-1][y]!=4&&M[x-1][y]!=3)
                {
                    Snake[0].now = 2;//下
                }
                else
                {
                    Snake[0].now = 0;//下
                }
            }
            else
            {
                if(M[x][y-1] != 4&&M[x][y-1] != 3)
                    Snake[0].now = 0;
                else if(M[x-1][y] != 4&&M[x-1][y] != 3)
                {
                    Snake[0].now = 2;
                }
                else if(M[x][y+1] != 4&&M[x][y+1] != 3)
                {
                    Snake[0].now = 1;
                }
                else
                {
                    Snake[0].now = 3;//you
                }
            }
        }
        if(y == fy)
        {
            if(x<fx)
            {
                if(M[x+1][y] != 4&&M[x+1][y] != 3)
                    Snake[0].now = 3;
                else if(M[x][y-1] != 4&&M[x][y-1] != 3)
                {
                    Snake[0].now = 0;
                }
                else if(M[x][y+1] != 4&&M[x][y+1] != 3)
                    Snake[0].now = 1;
                else
                {
                    Snake[0].now = 2;//下
                }
            }
            else
            {
                if(M[x-1][y] != 4&&M[x-1][y] != 3)
                    Snake[0].now = 2;
                else if(M[x][y+1] != 4&&M[x][y+1] != 3)
                {
                    Snake[0].now = 1;
                }
                else if(M[x][y-1] != 4&&M[x][y-1] != 3)
                    Snake[0].now = 0;
                else
                {
                    Snake[0].now = 3;//you
                }
            }
        }
    }
    M[x][y] = 0;
    Pos(x,y);
    printf(" ");
    Snake[0].x = Snake[0].x + dx[ Snake[0].now ];
    Snake[0].y = Snake[0].y + dy[ Snake[0].now ];
    Check_Border();
    Check_Head(x, y);

    if(sum == t)
        for(i = 1; i < sum; i++)
        {
            if(i == 1)
            {
                M[Snake[i].x][Snake[i].y] = 0;
                Pos(Snake[i].x,Snake[i].y);
                printf(" ");
            }
            if(i == sum - 1)
            {
                Snake[i].x = x;
                Snake[i].y = y;
                Snake[i].now = Snake[0].now;
            }
            else
            {
                Snake[i].x = Snake[i+1].x;
                Snake[i].y = Snake[i+1].y;
                Snake[i].now = Snake[i+1].now;
            }
            M[Snake[i].x ][ Snake[i].y ] = 4;
            Pos(Snake[i].x,Snake[i].y);
            printf("#");
        }
}

void AI_show()
{
    int i,j;
    while(1)
    {
        Sleep(T);
        //计算当吃食物的方向
        AI_Button();
        AI_Move();
        if(over == 2)
        {
            system("cls");
            Pos(L/2,C/3);
            printf("啊，不小心吃自己了，游戏结束!!!");
            Pos(L/2,C/3 + 1);
            printf("                >_<\n");
            Pos(L/2,C/3 + 2);
            printf("按任意键结束...");
            getchar();
            exit(0);
        }
    }
}
